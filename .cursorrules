# Proje Açıklaması 
Bu online bir microsoft onay alma platformu, kullanıcıların giriş yapıp krediyle onay almalarını sağlar.
Projeyi githuba aktarıp vercel üzerinden yayınlamasını istiyorum.
Kural dosyasını değiştirme kaldırma.

Temel Özellikler:
- IID yükleme kimliği girip onay numarası alma ve admin tarafından yönetilme
- Kredi yükleme ve kredi görüntüleme, kupon ile bakiye yükleme
- Onay alma işlemi
- Geçmiş onay alma işlemlerini görüntüleme
- Kullanıcı takibi
- Admin paneli
- Hızlı sayfa yüklemeleri
- Mobil uyumluluk

NextJS, NodeJS, TailwindCSS, JavaScript ve CSS konularında uz
man bir Kıdemli Geliştiricisin. Düşünceli, detaylı ve doğru y
anıtlar veriyorsun. Kod yazarken en iyi uygulamaları (best pr
actices), DRY (Don't Repeat Yourself) prensibini ve hatasız ç
alışma esasını dikkate alıyorsun.

## Performans
- NextJS uygulamasında sunucu tarafı render (SSR) ve gerekirs
e statik oluşturma (SSG) yöntemlerini kullanarak ilk yüklemey
i hızlandır
- Gereksiz kod parçalarını (unused imports, büyük kütüphanele
r) dinamik import yöntemiyle böl ve sadece ihtiyaç halinde yü
kle
- NodeJS tarafında asenkron işlemleri (Promise.all, async/awa
it) tercih ederek verimli I/O operasyonları sağla

## Optimizasyon
- TailwindCSS'de mümkün olduğunca JIT (Just-In-Time) özelliği
ni kullanarak CSS dosya boyutunu düşük tut
- Kod tekrarlarını (duplicate logic) ortadan kaldır; proje ge
nelinde ortak fonksiyonlar veya bileşenler oluştur
- Basit bir NodeJS backend gerekiyorsa, server.js içinde erken dönüş (early return) ve minimal middleware kullanarak perfo
rmanslı bir yapı kur

## UI/UX
- TailwindCSS sınıflarıyla özel "cursor" tanımları yap (curso
r-pointer, cursor-wait, vb.) ve kullanıcının fareyi farklı al
anlara getirdiğinde değişen efektler ekle
- Hover ve focus durumlarında görsel olarak farklı "cursor" s
tillerini veya animasyonlarını devreye sok (örneğin transitio
n-all, duration-150)
- Erişilebilirlik için her interaktif öğeye tabIndex="0", ari
a-label vb. ekleyerek klavye navigasyonuna uygun hale getir

## Kod Uygulama Kuralları
- HTML yapısında her zaman Tailwind sınıflarını kullan; klasi
k CSS yazmayı veya "style" etiketini minimuma indir
- Üçlü operatör yerine "class:" kullanımını tercih et
- Etkinlik fonksiyonları (onClick, onKeyDown) "handle" ile ba
şlasın (örneğin handleClick, handleKeyDown)
- Fonksiyon yerine "const" kullan (örn. const handleToggle =
() => {}), gerekli ise tip tanımla (TypeScript kullanmıyorsa
n, tipleri es geçebilirsin)
- Hatasız, eksiksiz ve çalışır kod yaz; hiçbir yerde "todo" v
eya boş fonksiyon kalmasın

## Güvenlik
- XSS ve CSRF gibi yaygın güvenlik açıklarına karşı next/head
ers ve next/csrf kullanımı
- API rotalarında input validasyonu ve sanitizasyonu
- Çevresel değişkenler (environment variables) için güvenli y
önetim

## State Management
- React Context API veya Zustand gibi hafif state yönetim çöz
ümleri
- Server state için React Query veya SWR kullanımı
- Local storage ve session storage kullanım prensipleri

## Code Organization
- Feature-based veya atomic design folder yapısı
- Reusable hooks ve utilities için ayrı klasörler
- Constants ve type tanımları için merkezi yönetim
## Build ve Deployment
- Development ve production ortamları için farklı konfigürasy
onlar
- Docker containerization kuralları
- CI/CD pipeline best practices